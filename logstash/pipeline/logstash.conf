input {
  file {
    path => "/var/log/suricata/eve.json"
    start_position => "beginning"
    codec => "json"
    type => "suricata"
  }
}

filter {
  if [type] == "suricata" {
    # Parse timestamp
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # Add GeoIP enrichment for source and destination IPs
    if [src_ip] {
      geoip {
        source => "src_ip"
        target => "src_geoip"
      }
    }
    
    if [dest_ip] {
      geoip {
        source => "dest_ip"
        target => "dest_geoip"
      }
    }
    
    # Extract and enrich alert data
    if [event_type] == "alert" {
      mutate {
        add_field => { "severity_level" => "%{[alert][severity]}" }
        add_field => { "signature_id" => "%{[alert][signature_id]}" }
        add_field => { "category" => "%{[alert][category]}" }
      }
    }
    
    # Extract HTTP data
    if [event_type] == "http" {
      mutate {
        add_field => { "http_method" => "%{[http][http_method]}" }
        add_field => { "http_status" => "%{[http][status]}" }
        add_field => { "http_hostname" => "%{[http][hostname]}" }
        add_field => { "http_url" => "%{[http][url]}" }
      }
    }
    
    # Extract DNS data
    if [event_type] == "dns" {
      mutate {
        add_field => { "dns_type" => "%{[dns][type]}" }
        add_field => { "dns_query" => "%{[dns][rrname]}" }
        add_field => { "dns_rcode" => "%{[dns][rcode]}" }
      }
    }
    
    # Add flow classification and ML features
    if [src_port] and [dest_port] {
      if [dest_port] in [80, 8080, 8000] {
        mutate { 
          add_tag => ["web_traffic"] 
          add_field => { "service_type" => "web" }
          add_field => { "protocol_category" => "http" }
        }
      } else if [dest_port] in [443, 8443] {
        mutate { 
          add_tag => ["secure_web_traffic"] 
          add_field => { "service_type" => "web_secure" }
          add_field => { "protocol_category" => "https" }
        }
      } else if [dest_port] == 22 {
        mutate { 
          add_tag => ["ssh_traffic"] 
          add_field => { "service_type" => "remote_access" }
          add_field => { "protocol_category" => "ssh" }
        }
      } else if [dest_port] == 53 {
        mutate { 
          add_tag => ["dns_traffic"] 
          add_field => { "service_type" => "dns" }
          add_field => { "protocol_category" => "dns" }
        }
      } else {
        mutate { 
          add_field => { "service_type" => "other" }
          add_field => { "protocol_category" => "unknown" }
        }
      }
    }
    
    # Add risk scoring for ML
    if [event_type] == "alert" {
      if [alert][severity] {
        if [alert][severity] == 1 {
          mutate { add_field => { "risk_score" => 100 } }
          mutate { add_field => { "threat_level" => "critical" } }
        } else if [alert][severity] == 2 {
          mutate { add_field => { "risk_score" => 75 } }
          mutate { add_field => { "threat_level" => "high" } }
        } else if [alert][severity] == 3 {
          mutate { add_field => { "risk_score" => 50 } }
          mutate { add_field => { "threat_level" => "medium" } }
        } else {
          mutate { add_field => { "risk_score" => 25 } }
          mutate { add_field => { "threat_level" => "low" } }
        }
      }
    }
    
    # Add network segment classification
    if [src_ip] {
      cidr {
        address => [ "%{src_ip}" ]
        network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" ]
        add_field => { "src_network_type" => "internal" }
      }
      if ![src_network_type] {
        mutate { add_field => { "src_network_type" => "external" } }
      }
    }
    
    if [dest_ip] {
      cidr {
        address => [ "%{dest_ip}" ]
        network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" ]
        add_field => { "dest_network_type" => "internal" }
      }
      if ![dest_network_type] {
        mutate { add_field => { "dest_network_type" => "external" } }
      }
    }
    
    # Create a unified security index with proper ML-ready structure
    mutate {
      add_field => { "[@metadata][index_name]" => "maple-security" }
      add_field => { "data_source" => "suricata" }
      add_field => { "security_event_timestamp" => "%{timestamp}" }
      add_field => { "event_classification" => "network_security" }
    }
  }
}

output {
  opensearch {
    hosts => ["opensearch:9200"]
    index => "%{[@metadata][index_name]}"
    template_name => "maple-security-template"
    template => "/usr/share/logstash/templates/maple-security-template.json"
    template_overwrite => true
    manage_template => true
  }
  
  # Optional: Keep stdout for debugging (comment out in production)
  stdout { 
    codec => rubydebug 
  }
}
