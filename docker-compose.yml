services:
  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    command: suricata -c /etc/suricata/suricata.yaml -i eth0
    network_mode: host
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    volumes:
      - ./suricata/config/suricata.yaml:/etc/suricata/suricata.yaml:ro
      - ./suricata/rules:/var/lib/suricata/rules:ro
      - suricata-logs:/var/log/suricata
    restart: unless-stopped

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:latest
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash/templates:/usr/share/logstash/templates:ro
      - suricata-logs:/var/log/suricata:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
    depends_on:
      - opensearch
    networks:
      - opensearch-net
    restart: unless-stopped

  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - cluster.name=maple-security-cluster
      - node.name=opensearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "max_map_count=262144"
      # Enable ML plugins and features
      - "plugins.ml_commons.controller_enabled=true"
      - "plugins.ml_commons.mcp_server_enabled=true"
      - "plugins.ml_commons.only_run_on_ml_node=false"
      - "plugins.ml_commons.native_memory_threshold=99"
      # Index lifecycle management
      - "plugins.index_state_management.enabled=true"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    networks:
      - opensearch-net
    restart: unless-stopped

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
      # Enable ML and Security Analytics plugins
      - "OPENSEARCH_DASHBOARDS_PLUGINS=anomalyDetectionDashboards,mlCommonsDashboards,securityAnalyticsDashboards"
    volumes:
      - ./opensearch-dashboards/opensearch_dashboards.yml:/usr/share/opensearch-dashboards/config/opensearch_dashboards.yml:ro
    depends_on:
      - opensearch
    networks:
      - opensearch-net
    restart: unless-stopped

  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile
    container_name: admin-dashboard
    ports:
      - "3000:3000"
    environment:
      - OPENSEARCH_URL=http://opensearch:9200
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - opensearch
      - logstash
    networks:
      - opensearch-net
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8080:80/tcp"
    environment:
      TZ: 'America/Chicago'
      FTLCONF_LOCAL_IPV4: '172.25.0.10'
      PIHOLE_DNS_: '1.1.1.1;8.8.8.8'
      VIRTUAL_HOST: 'pihole.local'
      DNSMASQ_LISTENING: 'all'
      WEB_PORT: 80
      SERVERIP: '172.25.0.10'
      WEBTHEME: 'default-dark'
      REV_SERVER: 'false'
      TEMPERATUREUNIT: 'c'
      WEBUIBOXEDLAYOUT: 'boxed'
      QUERY_LOGGING: 'true'
      INSTALL_WEB_SERVER: 'true'
      INSTALL_WEB_INTERFACE: 'true'
      LIGHTTPD_ENABLED: 'true'
    volumes:
      - pihole-data:/etc/pihole
      - pihole-dnsmasq:/etc/dnsmasq.d
      - ./pihole/init-pihole.sh:/usr/local/bin/init-pihole.sh:ro
      - ./pihole/adlists.txt:/usr/local/bin/adlists.txt:ro
    networks:
      opensearch-net:
        ipv4_address: 172.25.0.10
    cap_add:
      - NET_ADMIN
    dns:
      - 127.0.0.1
      - 1.1.1.1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/admin/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: >
      sh -c "
        echo 'Starting Pi-hole initialization...' &&
        /s6-init &
        sleep 45 &&
        echo 'Pi-hole base setup complete, running blocklist setup...' &&
        if [ -f /usr/local/bin/init-pihole.sh ]; then
          chmod +x /usr/local/bin/init-pihole.sh &&
          /usr/local/bin/init-pihole.sh &
        fi &&
        wait
      "

volumes:
  suricata-logs:
  opensearch-data:
  pihole-data:
  pihole-dnsmasq:

networks:
  opensearch-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
